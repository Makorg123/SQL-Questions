# Q1: Find the number of workers by department who joined in or after April.Output the department name along with the corresponding number of workers.
       Sort records based on the number of workers in descending order.
Anas : 
select 
       department,
       count(worker_id) as Count
from workers
       where date(joining_date) >= '2014-04-01'
group by department
order by 2 desc;

# Q2: Find order details made by Jill and Eva. Consider the Jill and Eva as first names of customers.Output the order date, details and cost along with the first name.
       Order records based on the customer id in ascending order.

Ans: 
select 
    c.first_name,
    o.order_date,
    o.order_details,
    o.total_order_cost
from customers c
inner join orders o
on c.id = o.cust_id
where first_name in ( 'Jill', 'Eva');

# Q3: Write a query that'll identify returning active users. A returning active user is a user that has made a second purchase within 7 days of any other of their purchases. 
      Output a list of user_ids of these returning active users.
Ans:
select 
    distinct a1.user_id
from amazon_transactions as a1
join amazon_transactions as a2
on a1.user_id = a2.user_id
       and a1.id <> a2.id
       and a1.created_at >= a2.created_at
       where datediff(a1.created_at, a2.created_at) <= 7;

# Q4: Find the activity date and the pe_description of facilities with the name 'STREET CHURROS' and with a score of less than 95 points.

Ans: 
select 
    activity_date,
    pe_description
from los_angeles_restaurant_health_inspections
where facility_name = 'STREET CHURROS' and score < 95;

# Q5: Find libraries who haven't provided the email address in circulation year 2016 but their notice preference definition is set to email.Output the library code.

Ans: 
select 
    distinct home_library_code
from library_usage
where provided_email_address = 0 and notice_preference_definition = 'email'
and circulation_active_year = '2016';

# Q6: Find the base pay for Police Captains. Output the employee name along with the corresponding base pay.

Ans: 
select 
employeename,
basepay
from sf_public_salaries
where jobtitle like 'CAPTAIN%';

# Q7: Write a query that calculates the difference between the highest salaries found in the marketing and engineering departments. Output just the absolute difference in salaries.

Ans: 
select
    abs((select max(salary)
from db_employee emp
    join db_dept dept on emp.department_id = dept.id
    where department = 'engineering') - 
    (select max(salary)
from db_employee emp
    join db_dept dept
    on emp.department_id = dept.id
    where department = 'marketing')) as salary_diff;

# Q8: Find employees who are earning more than their managers. Output the employee's first name along with the corresponding salary.
Ans:
select 
       first_name,
       salary
from employee 
where salary > 
       (select salary from employee where id = manager_id);

# Q9: Find the Olympics with the highest number of athletes. The Olympics game is a combination of the year and the season, and is found in the 'games' column. 
      Output the Olympics along with the corresponding number of athletes.
Ans:
select 
       games,
       count(disinct id) as athlete
from olympics_athletes_events
group by games
order by 2 desc
limit 1;

# Q10: Compare each employee's salary with the average salary of the corresponding department.Output the department, first name, and salary of employees along with the 
       average salary of that department.
Ans:
select 
       department,
       first_name,
       salary,
       avg(salary) over (partition by department)
from employee;

# Q11: Find the number of employees working in the Admin department that joined in April or later.
Ans:
select 
       count(worker_id) as admin
from 
       worker
where extract(month from joining_date) >= 4
and department = 'Admin';

# Q12: You have been asked to find the 5 most lucrative products in terms of total revenue for the first half of 2022 (from January to June inclusive).
       Output their IDs and the total revenue.
Ans:
select   
       product_id,
       sum(cost_in_dollars * units_sold) as revenue
from online_orders
where date between '2022-01-01' and '2022-06-30'
group by product_id
order by 2 desc
limit 5;

# Q12: Find the most profitable company from the financial sector. Output the result along with the continent.
Ans:
select 
    company,
    continent
from 
       forbes_global_2010_2014
where sector = 'Financials'
having max(marketvalue) ;

# Q13: Write a query that returns the number of unique users per client per month:
Ans:
select 
       client_id,
       extract(month from time_id) as month,
       count(distinct user_id) as num_count
from fact_events
group by 1,2;

# Q14: Find the last time each bike was in use. Output both the bike number and the date-timestamp of the bike's last use (i.e., the date-time the bike was returned). 
       Order the results by bikes that were most recently used.
Ans: 
select 
       bike_numer,
       max(end_time)last_used
from dc_bikeshare_q1_2012
group by 1
order by 2 desc;

# Q15: Count the number of user events performed by MacBookPro users. Output the result along with the event name. Sort the result based on the event count in the desc order.
Ans: 
select 
       distinct event_name,
       count(*) over(partition by event_name) as event_count
from playbook_events
where device like = 'macbook pro'
order by 2 desc;

# Q16: Find how many times each artist appeared on the Spotify ranking list. Output the artist name along with the corresponding number of occurrences.
       Order records by the number of occurrences in descending order.
Ans:
select
       distinct artist,
       count(*) over(partition by artist) as no_occurences
from spotify_worldwide_daily_song_ranking
order by 2 desc;

# Q17: Find all posts which were reacted to with a heart. For such posts output all columns from facebook_posts table.
Ans:
select 
    post_id,
    poster,
    post_text,
    post_keywords,
    post_date
from facebook_posts
natural join facebook_reactions
where reaction = 'heart'
group by reaction;

# Q18: Find the details of each customer regardless of whether the customer made an order. Output the customer's first name, last name, and the city along with the order details.
       You may have duplicate rows in your results due to a customer ordering several of the same items. Sort records based on the customer's first name and the order details 
       in ascending order.
Ans: 
select 
    first_name,
    last_name,
    city,
    order_details
from customers;
left join orders
on customers.id = orders.cust_id
order by 1,2;

# Q19: Find all Lyft drivers who earn either equal to or less than 30k USD or equal to or more than 70k USD. Output all details related to retrieved records.
Ans: 
select *
from 
       lyft_drivers
where yearly_salary <= 30000 or yearly_salary >= 70000;

# Q20: Find the email activity rank for each user. Email activity rank is defined by the total number of emails sent. The user with the highest number of emails sent will have 
       a rank of 1, and so on. Output the user, total emails, and their activity rank. Order records by the total emails in descending order. Sort users with the same number of 
       emails in alphabetical order.In your rankings, return a unique value (i.e., a unique rank) even if multiple users have the same number of emails. For tie breaker use 
       alphabetical order of the user usernames.
Ans: 
select 
    from_user,
    count(*) as total_emails,
    row_number() over(order by count(*) desc, from_user asc)
from google_gmail_emails
group by from_user
order by 2 desc;

# Q21: The election is conducted in a city and everyone can vote for one or more candidates, or choose not to vote at all. Each person has 1 vote so if they vote for multiple 
       candidates, their vote gets equally split across these candidates. For example, if a person votes for 2 candidates, these candidates receive an equivalent of 0.5 vote 
       each.Find out who got the most votes and won the election. Output the name of the candidate or multiple names in case of a tie. To avoid issues with a floating-point 
       error you can round the number of votes received by a candidate to 3 decimal places.
Ans:
with ct as(
select voter, 1/count(1) as tot_votes
from voting_results
where candidate is not null
group by voter),
ct2 as (
select r.*, ct.tot_votes from voting_results as r
join ct
on ct.voter = r.voter),
winner as (
select candidate, sum(tot_votes) as winner
from ct2
group by candidate
order by winner desc
limit 1)
select candidate from winner;

# Q22: Output ids of students with a median score from the writing SAT.
Ans: 
with cte as (
select 
    student_id, 
    sat_writing,
    row_number() over(order by sat_writing asc) rownumber
from sat_scores
)
select student_id from sat_scores
where sat_writing = (
select sat_writing from cte
where rownumber = (select (count(*)+1)/2 as person from sat_scores))

# Q23: Make a report showing the number of survivors and non-survivors by passenger class.
Classes are categorized based on the pclass value as:
pclass = 1: first_class
pclass = 2: second_classs
pclass = 3: third_class
Output the number of survivors and non-survivors by each class.

Ans: 
select 
       survived,
       sum(case when pclass = 1 then 1 else 0 end) as first_class,
       sum(case when pclass = 2 then 1 else 0 end) as second_class,
       sum(case when pclass = 3 then 1 else 0 end) as third_class
from titanic_survior
group by survived;
