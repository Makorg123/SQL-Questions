# Q1: Find the number of workers by department who joined in or after April.Output the department name along with the corresponding number of workers.
       Sort records based on the number of workers in descending order.
Anas : 
select 
       department,
       count(worker_id) as Count
from workers
       where date(joining_date) >= '2014-04-01'
group by department
order by 2 desc;

# Q2: Find order details made by Jill and Eva. Consider the Jill and Eva as first names of customers.Output the order date, details and cost along with the first name.
       Order records based on the customer id in ascending order.

Ans: 
select 
    c.first_name,
    o.order_date,
    o.order_details,
    o.total_order_cost
from customers c
inner join orders o
on c.id = o.cust_id
where first_name in ( 'Jill', 'Eva');

# Q3: Write a query that'll identify returning active users. A returning active user is a user that has made a second purchase within 7 days of any other of their purchases. 
      Output a list of user_ids of these returning active users.
Ans:
select 
    distinct a1.user_id
from amazon_transactions as a1
join amazon_transactions as a2
on a1.user_id = a2.user_id
       and a1.id <> a2.id
       and a1.created_at >= a2.created_at
       where datediff(a1.created_at, a2.created_at) <= 7;

# Q4: Find the activity date and the pe_description of facilities with the name 'STREET CHURROS' and with a score of less than 95 points.

Ans: 
select 
    activity_date,
    pe_description
from los_angeles_restaurant_health_inspections
where facility_name = 'STREET CHURROS' and score < 95;

# Q5: Find libraries who haven't provided the email address in circulation year 2016 but their notice preference definition is set to email.Output the library code.

Ans: 
select 
    distinct home_library_code
from library_usage
where provided_email_address = 0 and notice_preference_definition = 'email'
and circulation_active_year = '2016';

# Q6: Find the base pay for Police Captains. Output the employee name along with the corresponding base pay.

Ans: 
select 
employeename,
basepay
from sf_public_salaries
where jobtitle like 'CAPTAIN%';

# Q7: Write a query that calculates the difference between the highest salaries found in the marketing and engineering departments. Output just the absolute difference in salaries.

Ans: 
select
    abs((select max(salary)
from db_employee emp
    join db_dept dept on emp.department_id = dept.id
    where department = 'engineering') - 
    (select max(salary)
from db_employee emp
    join db_dept dept
    on emp.department_id = dept.id
    where department = 'marketing')) as salary_diff;

# Q8: Find employees who are earning more than their managers. Output the employee's first name along with the corresponding salary.
Ans:
select 
       first_name,
       salary
from employee 
where salary > 
       (select salary from employee where id = manager_id);

# Q9: Find the Olympics with the highest number of athletes. The Olympics game is a combination of the year and the season, and is found in the 'games' column. 
      Output the Olympics along with the corresponding number of athletes.
Ans:
select 
       games,
       count(disinct id) as athlete
from olympics_athletes_events
group by games
order by 2 desc
limit 1;

# Q10: Compare each employee's salary with the average salary of the corresponding department.Output the department, first name, and salary of employees along with the 
       average salary of that department.
Ans:
select 
       department,
       first_name,
       salary,
       avg(salary) over (partition by department)
from employee;

# Q11: Find the number of employees working in the Admin department that joined in April or later.
Ans:
select 
       count(worker_id) as admin
from 
       worker
where extract(month from joining_date) >= 4
and department = 'Admin';

# Q12: 
