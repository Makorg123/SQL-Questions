# Q1: Write an SQL query to find the IDs of the invalid tweets. The tweet is invalid if the number of characters used in the content of the tweet is strictly greater than 15.

Ans: 
     select tweet_id from Tweets
     where length(content) > 15; 

# Q2: Write an SQL query to find all the authors that viewed at least one of their own articles. Return the result table sorted by id in ascending order.

Ans: 
     select distinct(author_id) as id
     from Views v
     where author_id in (select viewer_id from Views v where v.author_id = v.viewer_id_
     order by 1 asc;

# Q3: A country is big if:
- it has an area of at least three million (i.e., 3000000 km2), or
- it has a population of at least twenty-five million (i.e., 25000000).
- Write an SQL query to report the name, population, and area of the big countries.

Ans: 
     select name, population, area
     from World
     where area >= 3000000 or population >= 25000000;

# Q4: Write an SQL query to report the names of the customer that are not referred by the customer with id = 2.

Ans: 
     select name from Customer
     where referee_id <> 2 or referee_id is null;

# Q5: Write an SQL query to find the ids of products that are both low fat and recyclable.

Ans: 
     select product_id
     from Products
     where low_fats = 'Y' and recyclable = 'Y';

# Q6: Write an SQL query to show the unique ID of each user, If a user does not have a unique ID replace just show null.

Ans:
select 
  u.unique_id,
  e.name
from Employees e
left join EmployeeUNI u
on e.id = u.id;

# Q7: Write an SQL query that reports the product_name, year, and price for each sale_id in the Sales table.
Ans:
select 
  product_name,
  year,
  price
from Sales
natural join Product
group by sale_id;

# Q8: Write a SQL query to find the IDs of the users who visited without making any transactions and the number of times they made these types of visits.
Ans:

select customer_id, COUNT(visit_id) as count_no_trans
from Visits
where visit_id NOT IN  (
  select visit_id from Transactions
)
group by customer_id;  

# Q9: Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).
Ans:
select w1.id 
from Weather w1, Weather w2
where datediff(w1.recordDate,w2.recordDate)=1 and w1.temperature > w2.temperature;

# Q10: There is a factory website that has several machines each running the same number of processes. Write an SQL query to find the average time each machine takes to 
complete a process.The time to complete a process is the 'end' timestamp minus the 'start' timestamp. The average time is calculated by the total time to complete every process 
on the machine divided by the number of processes that were run.
The resulting table should have the machine_id along with the average time as processing_time, which should be rounded to 3 decimal places.

Ans: 
SELECT 
    s.machine_id, 
    ROUND(AVG(e.timestamp-s.timestamp),3) as processing_time 
FROM Activity s
JOIN Activity e 
ON e.machine_id=s.machine_id
WHERE s.activity_type='start' AND e.activity_type='end'
GROUP BY s.machine_id;

# Q11: Write an SQL query to report the name and bonus amount of each employee with a bonus less than 1000.
Ans:
select 
     e.name as name,
     b.bonus as bonus
from Employee e
left join Bonus b
on e.empId = b.empId
where bonus < 1000 and bonus is null;

# Q12: Write an SQL query to find the number of times each student attended each exam. Return the result table ordered by student_id and subject_name.
Ans:
select 
    s.student_id,
    s.student_name,
    sub.subject_name,
    count(e.subject_name) as attended_exams
from 
    Students s
cross join 
    Subjects sub
left join 
    Examinations e
    on s.student_id = e.student_id and sub.subject_name = e.subject_name
group by 1,2,3
order by 1,2;

# Q13: Write an SQL query to report the managers with at least five direct reports.
Ans:
select 
     name
from 
     Employee
where Id in (
     select managerId from Employee
     group by managerId
     having count(*) >= 5
);
